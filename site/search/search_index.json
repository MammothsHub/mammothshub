{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Welcome to Mammoth hubs' documentation. This is a place where I like to keep my documentation available through github pages so that it can be shared amoungst fellow coders. Enjoy and please share as you see fit. </p> <p>Please note that any code writen or posted to this site is covered under the MIT licence:  <pre><code>MIT License\n\nCopyright (c) 2024 MammothsHub\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre></p>"},{"location":"Blender-PS1-Style/01-useful-commands/","title":"Useful Commands","text":""},{"location":"Blender-PS1-Style/01-useful-commands/#camera-controls","title":"Camera Controls","text":"Shortcut Description <code>numpad1</code> View Up Y axis across XZ plane <code>numpad3</code> View Down X axis across YZ plane <code>numpad7</code> View Down Z axis across XY <code>ctrl numpad1</code> View Down Y axis across XZ plane <code>ctrl numpad3</code> View up X axis across YZ plane <code>ctrl numpad7</code> View up Z axis across XY"},{"location":"Blender-PS1-Style/01-useful-commands/#different-modes","title":"Different modes","text":"Shortcut Description <code>G</code> Grab Mode <code>Tab</code> Edit Mode <code>alt z</code> Transparency Mode"},{"location":"Blender-PS1-Style/01-useful-commands/#grab-mode","title":"Grab Mode","text":"Shortcut Description <code>Z</code> Lock to Z axis <code>ctrl</code> Snap to grid (hold)"},{"location":"Blender-PS1-Style/01-useful-commands/#transparency-mode","title":"Transparency Mode","text":"Shortcut Description <code>a</code> select all vertices <code>b</code> boxselection <code>c</code> circle selection <code>e</code> extrude <code>m</code> merge (select by distance) <code>s</code> scale <code>ctrl r</code> loop cut <code>middleMouse</code> deselect vertex"},{"location":"Blender-PS1-Style/02-windmill-example/","title":"Finding Reference Images","text":"<p>Let's say we want to model a windmill. Many of our images will be copyrighted so we can use search terms like: <pre><code>medieval windmill public domain\n</code></pre></p> <p>This gives us search results that look like this:  </p>"},{"location":"Blender-PS1-Style/02-windmill-example/#getting-started","title":"Getting started","text":"<p>So now let's start up/install blender. Blender is a free and open source application that can be installed via steam. Start it up and use: <pre><code>left Mouse\nShift + Left Mouse  \n</code></pre> On the camera and light then use <code>delete</code> to remove them:  </p> <p>We'll then change the <code>cubes</code> name to <code>windmill</code>  and save </p>"},{"location":"Blender-PS1-Style/02-windmill-example/#making-the-central-tower","title":"Making the Central Tower","text":""},{"location":"Blender-PS1-Style/02-windmill-example/#put-cube-on-the-floor","title":"Put Cube On The Floor","text":"<p>First we'll switch to edit mode (<code>tab</code>) then by looking down the y axis (<code>numpad1</code>), switching to the grab mode (<code>g</code>) and then locking to the Z axis and (<code>z</code>) and holding <code>ctrl</code> to snap to the grid we can put the cube on the z axis where the bottom of the cube is at z=0. </p>"},{"location":"Blender-PS1-Style/02-windmill-example/#loop-cutting","title":"Loop Cutting","text":"<p>Then we will change modes to transparent mode (<code>alt z</code>) so we can select vertices behind geometries then box select (<code>b</code>) the top four vertices of the cube will now be selected we will drag these up whilst holding <code>ctrl</code> and tapping <code>z</code> to lock to the z axis. Each square represents 1m and typically for a building ~ 8m tall is good. For reference a character is ~ 2m. Then we loop cut (<code>ctrl r</code>) and select horizontal or vertical, horizontal in this case. Then move the cut to about 2/3rds down. Finally we can select the bottom two point and use the scale command (<code>s</code>) to fill out the base a little bit. You should have something that looks like this:   </p>"},{"location":"Blender-PS1-Style/02-windmill-example/#extruding-top","title":"Extruding Top","text":"<p>After we have loop cut we have the main body for our windmill but it feels like its missing somewhere for the Windmill blades to come from. So Let's make a little hat. By selecting the top 4 points in <code>transparency mode</code> we can then click use extrude (<code>e</code>) then scale with (<code>s</code>) then extrude again (<code>e</code>) to create a little box. Finally we can then scale (<code>s</code>) again to close the top a little bit to give the windmill at hat. It should look like similar to this:  </p>"},{"location":"Godot/01-using-git/","title":"Godot's \"Support\" For Git","text":"<p>Godot does technically support git version control. In the same way chocolate is technically a vegetable. Unlike an application like VScode which has git source control baked in as a core feature Godot does not. Instead Godot will simply ignore the relevant git directories (.git primarily) and will consider them differently from the other resources in the <code>res</code> directory.</p> <p>Therefore, if you want to create a godot project that uses git you need to use the <code>terminal</code>, <code>vscode</code>, or the <code>github desktop</code> application.  </p>"},{"location":"Godot/01-using-git/#setting-up-a-new-repo","title":"Setting up a new repo","text":"<p>Firstly let's create a new repo:  </p> <p>Well call it godotGitTest and initialize it with a <code>README</code> to make our lives easier   </p> <p>That's all we need to do for now</p>"},{"location":"Godot/01-using-git/#cloning-the-repo","title":"Cloning the repo","text":"<p>Git will produce a link that we can clone via https which we will copy to clipboard:   </p> <p>Then we'll go to powershell, change directory to Downloads and clone our new repo: <pre><code>cd .\\Downloads\\\ngit clone https://github.com/MammothsHub/godotGitTest.git\n</code></pre></p> <p>You should then see output like this: <pre><code>Cloning into 'godotGitTest'...\nremote: Enumerating objects: 3, done.\nremote: Counting objects: 100% (3/3), done.\nremote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)\nReceiving objects: 100% (3/3), done.\n</code></pre></p>"},{"location":"Godot/01-using-git/#opening-the-repo-in-godot","title":"Opening The Repo In Godot","text":"<p>We will then Open the Godot engine and hit the create button. Afterwards we will attempt to open a new godot project in the git repo we just cloned. You will see yellow warning text ignore this!:  </p> <p>When we hit create and edit Godot will again try to stop you. Once again ignore this and hit ok.  </p>"},{"location":"Godot/01-using-git/#adding-features-and-pushing-to-git","title":"Adding Features and Pushing to Git","text":"<p>We add a new scene called <code>world.tscn</code> to our project. 2D or 3D node, your choice, and save to our project:  </p> <p>Head back to the git repo in the terminal and go into the : <pre><code>cd Downloads\\godotGitTest \n</code></pre></p> <p>Then we can add commit and push as we would for any other normal git repo:  <pre><code>git add **\ngit commit -a \ngit push\n</code></pre> Just remember to have your editor set for the <code>commit</code> and to type a commit message. </p> <p>Then we can head back to our git repo where those changes have taken effect:    Hoary! Now we've got a git repo that will update all of our changes! </p>"},{"location":"User%20Guide/01-markdown-examples/","title":"Markdown Examples","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"User%20Guide/01-markdown-examples/#code-annotation-examples","title":"Code Annotation Examples","text":""},{"location":"User%20Guide/01-markdown-examples/#codeblocks","title":"Codeblocks","text":"<p>Some <code>code</code> goes here.</p>"},{"location":"User%20Guide/01-markdown-examples/#plain-codeblock","title":"Plain codeblock","text":"<p>A plain codeblock:</p> <pre><code>Some code here\ndef myfunction()\n// some comment\n</code></pre>"},{"location":"User%20Guide/01-markdown-examples/#code-for-a-specific-language","title":"Code for a specific language","text":"<p>Some more code with the <code>py</code> at the start:</p> <pre><code>import tensorflow as tf\ndef whatever()\n</code></pre>"},{"location":"User%20Guide/01-markdown-examples/#with-a-title","title":"With a title","text":"bubble_sort.py<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"User%20Guide/01-markdown-examples/#with-line-numbers","title":"With line numbers","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"User%20Guide/01-markdown-examples/#highlighting-lines","title":"Highlighting lines","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"User%20Guide/01-markdown-examples/#icons-and-emojs","title":"Icons and Emojs","text":""}]}